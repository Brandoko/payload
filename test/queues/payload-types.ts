/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  collections: {
    posts: Post;
    simple: Simple;
    users: User;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  db: {
    defaultIDType: string;
  };
  globals: {};
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs?: {
    tasks: {
      UpdatePost: TaskUpdatePost;
      UpdatePostStep2: TaskUpdatePostStep2;
      CreateSimple: TaskCreateSimple;
      CreateSimpleWithDuplicateMessage: TaskCreateSimpleWithDuplicateMessage;
      ExternalTask: TaskExternalTask;
      inline?: {
        input: unknown;
        output: unknown;
      };
    };
    workflows?: {
      updatePost?: {
        input: WorkflowUpdatePostInput;
      };
      updatePostJSONWorkflow?: {
        input: WorkflowUpdatePostJSONWorkflowInput;
      };
      retriesTest?: {
        input: WorkflowRetriesTestInput;
      };
      retriesRollbackTest?: {
        input: WorkflowRetriesRollbackTestInput;
      };
      retriesWorkflowLevelTest?: {
        input: WorkflowRetriesWorkflowLevelTestInput;
      };
      inlineTaskTest?: {
        input: WorkflowInlineTaskTestInput;
      };
      externalWorkflow?: {
        input: WorkflowExternalWorkflowInput;
      };
      retriesBackoffTest?: {
        input: WorkflowRetriesBackoffTestInput;
      };
    };
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  jobStep1Ran?: string | null;
  jobStep2Ran?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "simple".
 */
export interface Simple {
  id: string;
  title: string;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  hasError?: boolean | null;
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug:
          | 'inline'
          | 'UpdatePost'
          | 'UpdatePostStep2'
          | 'CreateSimple'
          | 'CreateSimpleWithDuplicateMessage'
          | 'ExternalTask';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  workflowSlug?:
    | (
        | 'updatePost'
        | 'updatePostJSONWorkflow'
        | 'retriesTest'
        | 'retriesRollbackTest'
        | 'retriesWorkflowLevelTest'
        | 'inlineTaskTest'
        | 'externalWorkflow'
        | 'retriesBackoffTest'
      )
    | null;
  taskSlug?:
    | (
        | 'inline'
        | 'UpdatePost'
        | 'UpdatePostStep2'
        | 'CreateSimple'
        | 'CreateSimpleWithDuplicateMessage'
        | 'ExternalTask'
      )
    | null;
  queue?: 'default' | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'simple';
        value: string | Simple;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskUpdatePost".
 */
export interface TaskUpdatePost {
  input: {
    post: string | Post;
    message: string;
  };
  output: {
    messageTwice: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskUpdatePostStep2".
 */
export interface TaskUpdatePostStep2 {
  input: {
    post: string | Post;
    messageTwice: string;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCreateSimple".
 */
export interface TaskCreateSimple {
  input: {
    message: string;
    shouldFail?: boolean | null;
  };
  output: {
    simpleID: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskCreateSimpleWithDuplicateMessage".
 */
export interface TaskCreateSimpleWithDuplicateMessage {
  input: {
    message: string;
    shouldFail?: boolean | null;
  };
  output: {
    simpleID: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskExternalTask".
 */
export interface TaskExternalTask {
  input: {
    message: string;
  };
  output: {
    simpleID: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowUpdatePostInput".
 */
export interface WorkflowUpdatePostInput {
  post: string | Post;
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowUpdatePostJSONWorkflowInput".
 */
export interface WorkflowUpdatePostJSONWorkflowInput {
  post: string | Post;
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowRetriesTestInput".
 */
export interface WorkflowRetriesTestInput {
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowRetriesRollbackTestInput".
 */
export interface WorkflowRetriesRollbackTestInput {
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowRetriesWorkflowLevelTestInput".
 */
export interface WorkflowRetriesWorkflowLevelTestInput {
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowInlineTaskTestInput".
 */
export interface WorkflowInlineTaskTestInput {
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowExternalWorkflowInput".
 */
export interface WorkflowExternalWorkflowInput {
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "WorkflowRetriesBackoffTestInput".
 */
export interface WorkflowRetriesBackoffTestInput {
  message: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  // @ts-ignore 
  export interface GeneratedTypes extends Config {}
}